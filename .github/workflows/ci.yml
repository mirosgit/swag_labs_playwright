name: E2E (Playwright Python 3.11)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  tests:
    name: Run ${{ matrix.suite }} tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite: [smoke, regression]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright (Chromium)
        run: python -m playwright install --with-deps chromium

      - name: Run ${{ matrix.suite }} suite
        env:
          BASE_URL: ${{ secrets.BASE_URL || 'https://www.saucedemo.com/v1' }}
          STD_USER: ${{ secrets.STD_USER || 'standard_user' }}
          STD_PASS: ${{ secrets.STD_PASS || 'secret_sauce' }}
          LOCKED_USER: ${{ secrets.LOCKED_USER || 'locked_out_user' }}
          LOCKED_PASS: ${{ secrets.LOCKED_PASS || 'secret_sauce' }}
          HEADLESS: "true"
        run: |
          mkdir -p traces
          if [ "${{ matrix.suite }}" = "smoke" ]; then
            pytest -q -m smoke
          else
            # regression включает и smoke (см. conftest.py)
            pytest -q -m regression
          fi

      - name: Upload allure results (${{ matrix.suite }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.suite }}
          path: allure-results

      - name: Upload Playwright traces (${{ matrix.suite }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: traces-${{ matrix.suite }}
          path: traces

  report:
    name: Build Allure report
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout (for repo metadata)
        uses: actions/checkout@v4

      - name: Download smoke results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-smoke
          path: allure-results-smoke

      - name: Download regression results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-regression
          path: allure-results-regression

      - name: Merge allure results
        run: |
          mkdir -p allure-results
          cp -r allure-results-smoke/* allure-results/ || true
          cp -r allure-results-regression/* allure-results/ || true

      - name: Install Allure CLI
        run: |
          sudo apt-get update && sudo apt-get install -y default-jre wget
          wget -q https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          tar -xzf allure-2.29.0.tgz
          echo "$PWD/allure-2.29.0/bin" >> $GITHUB_PATH

      - name: Generate Allure HTML
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure HTML artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-html
          path: allure-report

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report

  deploy:
    name: Deploy Allure to GitHub Pages
    needs: report
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
